import telebot
import config
import time
import datetime
import airtable


bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=['start'])
def wellcome(mes):

    markup = telebot.types.ReplyKeyboardMarkup(row_width=2).add('üìò –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ', 'üìó –†–æ–∑–∫–ª–∞–¥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', 'üìö –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å', 'üßæ –ö–æ–¥–∏ –¥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è', 'üìù –ó–∞–º—ñ–Ω–∏', 'üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', '‚òï –ö—É–ø–∏ –º–µ–Ω—ñ –∫–∞–≤–∏!')

    bot.send_message(mes.chat.id, '–ü—Ä–∏–≤—ñ—Ç –¥—Ä—É–∂–µ‚ùï\n–¢–∏ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∑ –≥—Ä—É–ø–∏ –ü-23, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –±–æ—Ç–æ–º. –ù–µ –∑–∞—Å–º—É—á—É–π—Å—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–æ—î–º—É —Ç–≤–æ—Ä—Ü—é(@h0opsy).\n–í—ñ–Ω –æ–±–æ–≤\'—è–∑–∫–æ–≤–æ –≤—ñ–∑—å–º–µ –¥–æ —É–≤–∞–≥–∏!')
    time.sleep(3)
    bot.send_message(mes.chat.id, '–¢—É—Ç —Ä–æ–∑—ñ–±—Ä–∞–ª–∏—Å—å‚ùï\n–Ø —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –ø–æ–ª–µ–≥—à–µ–Ω–Ω—è –∂–∏—Ç—Ç—è —Å—Ç—É–¥–µ–Ω—Ç–∞, –≤—ñ–¥ —Ç–µ–ø–µ—Ä —Ç–∏ –Ω–µ –º—É—Å–∏—à —à—É–∫–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥, –∫–æ–¥–∏ –¥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è, –∑–∞–º—ñ–Ω–∏.')
    time.sleep(3)
    bot.send_message(mes.chat.id, '–ù—É —â–æ‚ùï\n–ì–æ–¥—ñ –ª—ñ—Ä–∏–∫–∏, –ø–æ—á–Ω—ñ–º–æ, –≤–∏–±–∏—Ä–∞–π —â–æ —Ç–∏ —Ö–æ—á–µ—à‚ùï', reply_markup=markup)

    config.base[mes.chat.id] = 0


@bot.message_handler(regexp='üìò –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ')
def today(mes):

    day_of_week = datetime.datetime.today().weekday()

    if day_of_week >= 5:
        bot.send_message(mes.chat.id, '–¢–∏ –≤ –∫—É—Ä—Å—ñ, —â–æ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π? –ù—É —Ç–∞–∫ —ñ –±—É—Ç–∏ –ª–æ–≤–∏ —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ –ø–æ–Ω–µ–¥—ñ–ª–æ–∫!')
        timetable = airtable.get_timetable(config.numbering[0], 0, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')
    else:
        timetable = airtable.get_timetable(config.numbering[day_of_week], day_of_week, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')


@bot.message_handler(regexp='üìó –†–æ–∑–∫–ª–∞–¥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
def tomorrow(mes):

    day_of_week = datetime.datetime.today().weekday()+1

    if day_of_week == 5:
        bot.send_message(mes.chat.id, '–¢–∏ –≤ –∫—É—Ä—Å—ñ, —â–æ —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π? –ù—É —Ç–∞–∫ —ñ –±—É—Ç–∏ –ª–æ–≤–∏ —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ –ø–æ–Ω–µ–¥—ñ–ª–æ–∫!')
        timetable = airtable.get_timetable(config.numbering[0], 0, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')
    elif day_of_week == 6:
        timetable = airtable.get_timetable(config.numbering[0], 0, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')
    else:
        timetable = airtable.get_timetable(config.numbering[day_of_week], day_of_week, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')
    

@bot.message_handler(regexp='üìö –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å')
def week(mes):
    for day in range(5):
        timetable = airtable.get_timetable(config.numbering[day], day, config.base[mes.chat.id])
        bot.send_message(mes.chat.id, timetable.format(mes.from_user, bot.get_me()), parse_mode='html')


@bot.message_handler(regexp='üßæ –ö–æ–¥–∏ –¥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è')
def urls(mes):
    bot.send_message(mes.chat.id, '–û—Å—å, –∫–æ—Ä–∏—Å—Ç—É–π—Å—è: https://telegra.ph/Kodi-dostupu-01-19')


@bot.message_handler(regexp='‚òï –ö—É–ø–∏ –º–µ–Ω—ñ –∫–∞–≤–∏!')
def cup_of_coffee(mes):
    bot.send_message(mes.chat.id, '–Ø–∫—â–æ –º–∞—î—à –±–∞–∂–∞–Ω–Ω—è –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –∞–≤—Ç–æ—Ä–∞, –æ–ø–ª–∞—Ç–∏—Ç–∏ —Ö–æ—Å—Ç–∏–Ω–≥, —Ç–æ–¥—ñ –æ—Å—å –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç–æ–∫:\n<pre>4441114417095161 –ú–æ–Ω–æ–±–∞–Ω–∫\n4790729935625038 –û—â–∞–¥–±–∞–Ω–∫\n5168755909495026 –ü—Ä–∏–≤–∞—Ç–±–∞–Ω–∫</pre>'.format(mes.from_user, bot.get_me()), parse_mode='html')
    time.sleep(1.3)
    bot.send_message(mes.chat.id, '–Ø–∫—â–æ —Ç–∏ –≤—Å–µ—Ç–∞–∫–∏ –Ω–∞–≤–∞–∂–∏–≤—Å—è<i>(-–ª–∞—Å—å)</i>, <b>–≤–µ–ª–∏—á–µ–∑–Ω–µ –¥—è–∫—É—é —Ç–æ–±—ñ ü•∞</b>. –¶–µ –º–æ—Ç–∏–≤—É—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏, —è–∫—â–æ —î —è–∫—ñ—Å—å –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó <b>–ø–∏—à–∏</b> <i>(@h0opsy)</i>!'.format(mes.from_user, bot.get_me()), parse_mode='html')


@bot.message_handler(regexp='üìù –ó–∞–º—ñ–Ω–∏')
def zamina(mes):
    bot.send_message(mes.chat.id, '–û—Å—å —Ç–æ–±—ñ –ø–æ–∫–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, http://bcpep.org.ua/rozklad-ta-zamina/zamina-urokiv')


@bot.message_handler(regexp='üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è')
def setings(mes):
    markup = telebot.types.InlineKeyboardMarkup(row_width=1)
    button = telebot.types.InlineKeyboardButton('On/Off üïπ', callback_data='switch')
    markup.add(button)

    bot.send_message(mes.chat.id, '–ö–æ–¥–∏ –¥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤ —Ä–æ–∑–∫–ª–∞–¥—ñ:', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def switch(call):
    if config.base[call.message.chat.id] == 1:
        config.base[call.message.chat.id] = 0
        print(config.base[call.message.chat.id], '--1')
    elif config.base[call.message.chat.id] == 0:
        config.base[call.message.chat.id] = 1
        print(config.base[call.message.chat.id], '--2')


bot.polling(none_stop=True)
